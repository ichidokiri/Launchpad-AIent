generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(cuid())
  email             String             @unique
  username          String?            @unique
  password          String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  image             String?
  monadBalance      Float?             @default(0)
  role              String             @default("USER")
  status            String?            @default("active")
  agents            AIAgent[]
  interactions      Interaction[]
  tokens            Token[]
  verificationCodes VerificationCode[]
}

model AIAgent {
  id              String        @id @default(cuid())
  name            String
  symbol          String
  description     String?
  price           Float         @default(0)
  marketCap       Float         @default(0)
  logo            String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  creatorId       String
  category        String        @default("Other")
  contractAddress String?
  holders         Int?
  isPublic        Boolean       @default(false)
  model           String        @default("gpt-3.5-turbo")
  status          String?       @default("active")
  systemPrompt    String?
  totalSupply     Float?
  verified        Boolean?      @default(false)
  creator         User          @relation(fields: [creatorId], references: [id])
  interactions    Interaction[]
  purchases       Purchase[]
}

model VerificationCode {
  id        String   @id @default(cuid())
  email     String
  code      String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [email], references: [email])
}

model Token {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  type      String
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Purchase {
  id        String   @id @default(cuid())
  agentId   String
  userId    String
  amount    Float
  createdAt DateTime @default(now())
  agent     AIAgent  @relation(fields: [agentId], references: [id])
}

model Interaction {
  id        String   @id @default(cuid())
  userId    String
  agentId   String
  type      String
  content   String?
  rating    Int?
  createdAt DateTime @default(now())
  agent     AIAgent  @relation(fields: [agentId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
